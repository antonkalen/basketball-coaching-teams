---
title: "Delat ledarskap"
subtitle: "Utvärdering år 2"
author: 
  - Alexandra Pérez Ferreirós
  - Erik Lundkvist
  - Anton Kalén
date: today

execute:
  echo: false
  warning: false
  
format:
  html:
    toc: true
    self-contained: true
---

```{r}
#| label: setup


# Load packages -----------------------------------------------------------

library(here)
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(forcats)
library(tidytext)
library(hrbrthemes)
library(forcats)
library(knitr)
library(ggtext)


# Set parameters ----------------------------------------------------------

theme_set(
  theme_ipsum(
    axis = FALSE,
    grid = FALSE,
    grid_col = "Gray50",
    plot_margin = margin(2, 2, 2, 2),
    base_size = 8,
    strip_text_size = 10,
    subtitle_size = 10,
    subtitle_margin = 0,
    ticks = TRUE
  ) +
  theme(
    panel.border = element_rect(color = "Gray50", fill = NA),
    panel.spacing.x = unit(.5, "lines"),
    panel.spacing.y = unit(1, "lines"),
    strip.text = element_textbox_simple(
        vjust = 0,
        margin = margin(3.5,0,0,0, unit = "lines")
      ),
    aspect.ratio = 1
  )
)

## Color scale
col_scale <- RColorBrewer::brewer.pal(3, "Dark2")[c(1, 3)]
names(col_scale) <- c("2022", "2023")



# Read data ----
pre_post_data_raw <- read_csv(here("data/prepost.csv"))

data_dict <- read_csv(here("data/basketball_season1_prepost_codebook.csv")) |> 
  select(human_name, variable) |> 
  tibble::deframe()

## Change data ----

pre_post_data_clean <- pre_post_data_raw |> 
  arrange(season, participant_id, desc(time)) |> 
  mutate(
    time = factor(time, levels = c("pre", "post"), labels = c("Före", "Efter")),
    season = factor(season, ordered = TRUE),
  ) |> 
  # group_by(participant_id) |> 
  # mutate(
  #   across(
  #     where(is.numeric),
  #     \(x) if_else(any(is.na(x)) == 1, NA, last(x) - first(x)),
  #     .names = "{.col}_change"
  #   ),
  #   across(
  #     where(is.numeric),
  #     \(x) {
  #       case_when(
  #         between(x, -1, 1) ~ "Samma",
  #         x >= 1 ~ "Höjning",
  #         x <= 1 ~ "Sänkning"
  #       )
  #     },
  #     .names = "{.col}_cat"
  #   )
  # ) |> 
  select(where(~!all(is.na(.x)))) |> 
  ungroup()

```

# Metod

Number of participating coaches:

```{r}
pre_post_data_clean |> 
  drop_na(shared_leadership_1) |> 
  group_by(season, participant_id) |>
  summarise(
    before = "Före" %in% time,
    after = "Efter" %in% time,
    both = n() == 2,
    .groups = "drop_last"
  ) |> 
  summarise(across(where(is.logical), sum)) |> 
  kable()
```


# Resultat

## Upplevelse av säsongen

```{r}
# 
# pre_post_data_clean |> 
#   pivot_longer(c(starts_with("performance"), general_experience, -contains("change"))) |> 
#   ggplot(aes(x = season, y = value)) +
#     geom_point()

```


## Syn på delat ledarskap

```{r}
shared_leadership_data <- pre_post_data_clean |> 
  pivot_longer(c(starts_with("shared_leadership"), -contains("change"))) |> 
  pivot_wider(id_cols = c(season, name, staff, participant_id), names_from = time, values_from = value) |> 
  mutate(
    Förändring = `Efter` - `Före`,
    Förbättring = Förändring >= 1,
    `Ingen förändring` = Förändring > -1 & Förändring < 1,
    Försämring = Förändring <= -1,
    name = factor(
      name,
      levels = c(
        "shared_leadership_1",
        "shared_leadership_2",
        "shared_leadership_3",
        "shared_leadership_model",
        "shared_leadership_4", 
        "shared_leadership_5",
        "shared_leadership_6",
        "shared_leadership_collaboration",
        "shared_leadership_7",
        "shared_leadership_8",
        "shared_leadership_9",
        "shared_leadership_roles"
      ),
      labels = c(
        "Delat ansvar ökar möjligheten att utveckla varje spelare i landslaget",
        "Delat ansvar gör de individuella coacherna bättre",
        "Delat ansvar kommer vara bra för utvecklingen av svensk basket",
        "**Syn på delat ledarskapsmodellen**",
        "Jag ser fram emot att arbeta med coacherna i min stab",
        "Jag känner tillit till coacherna i min stab",
        "Jag tycker att samarbetet i min stab fungerar bra",
        "**Syn på sammarbetet i staben**",
        "Jag tycker att samarbetet i staben gör att vi presterar bättre än vad vi hade gjort om vi hade arbetat individuellt",
        "Jag tycker att rollfördelningen i vår stab fungerar bra",
        "Jag har hittat en roll som passar mig i min stab",
        "**Syn på rollfördelning i staben**"
      )
    )
  )

shared_leadership_summarized_data <- shared_leadership_data |> 
  group_by(name, season) |> 
  summarise(
    across(
      where(is.numeric), 
      ~paste(
        formatC(mean(.x, na.rm = TRUE), 1, format = "f"), 
        "±", 
        formatC(sd(.x, na.rm = TRUE), 1, format = "f")
      )
    ),
    across(
      where(is.logical),
      ~paste0(
        sum(.x, na.rm = TRUE),
        " (",
        round(100 * mean(.x, na.rm = TRUE)),
        "%)"
      )
    ),
    .groups = "drop"
  ) |> 
  pivot_wider(
    id_cols = name, 
    names_from = season, 
    values_from = c(-name, -season),
    names_vary = "slowest"
  )

shared_leadership_summarized_data |> 
  slice(1:4) |> 
  kable()
```

```{r}
shared_leadership_view_data <- shared_leadership_data |>
  filter(
    name %in% c(
      "Delat ansvar ökar möjligheten att utveckla varje spelare i landslaget",
      "Delat ansvar gör de individuella coacherna bättre",
      "Delat ansvar kommer vara bra för utvecklingen av svensk basket",
      "**Syn på delat ledarskapsmodellen**"
    )
  )


shared_leadership_view_order <- shared_leadership_view_data |> 
  summarise(
    mean = mean(Efter, na.rm = TRUE),
    max = max(Efter, na.rm = TRUE),
    .by = c(season, staff)
  ) |> 
  arrange(season, desc(mean), desc(max)) |> 
  mutate(
    staff_2 = paste(season, staff),
    staff_2 = fct_inorder(staff_2)
  )


shared_leadership_view_data |>
  drop_na(Efter) |> 
  group_by(season, staff, name) |> 
  filter(n_distinct(participant_id) >= 2) |> 
  summarise(
    y = mean(Efter),
    ymin = min(Efter),
    ymax = max(Efter),
    .groups = "drop"
  ) |> 
  left_join(shared_leadership_view_order, by = join_by(season, staff)) |> 
  ggplot(aes(x = season, y = y, group = staff_2, color = season)) +
    geom_linerange(
      aes(ymin = ymin, ymax = ymax), 
      position = position_dodge2(width = 0.8, preserve = "single"),
      linewidth = 1.8,
      alpha = .5
    ) +
    geom_point(position = position_dodge2(width = 0.8, preserve = "single")) +
    facet_wrap(~name, ncol = 4) +
    scale_color_manual(values = col_scale, guide = NULL) +
    labs(x = NULL, y = NULL)

ggsave(
  here("output/shared_leadership.tiff"),
  compression = "lzw+p",
  width = 16,
  height = 6,
  units = "cm"
)
  
```


## Roll i staben

```{r}
shared_leadership_data |> 
  slice(9:12) |> 
  kable()
```

```{r}
role_data <- shared_leadership_data |>
  filter(
    name %in% c(
      "Jag tycker att samarbetet i staben gör att vi presterar bättre än vad vi hade gjort om vi hade arbetat individuellt",
      "Jag tycker att rollfördelningen i vår stab fungerar bra",
      "Jag har hittat en roll som passar mig i min stab",
      "**Syn på rollfördelning i staben**"
    )
  )

role_order <- role_data |> 
  summarise(
    mean = mean(Efter, na.rm = TRUE),
    max = max(Efter, na.rm = TRUE),
    .by = c(season, staff)
  ) |> 
  arrange(season, desc(mean), desc(max)) |> 
  mutate(
    staff_2 = paste(season, staff),
    staff_2 = fct_inorder(staff_2)
  )


role_data |>
  drop_na(Efter) |> 
  group_by(season, staff, name) |> 
  filter(n_distinct(participant_id) >= 2) |> 
  summarise(
    y = mean(Efter),
    ymin = min(Efter),
    ymax = max(Efter),
    .groups = "drop"
  ) |> 
  left_join(role_order, by = join_by(season, staff)) |> 
  ggplot(aes(x = season, y = y, group = staff_2, color = season)) +
    geom_linerange(
      aes(ymin = ymin, ymax = ymax), 
      position = position_dodge2(width = 0.8, preserve = "single"),
      linewidth = 1.8,
      alpha = .5
    ) +
    geom_point(position = position_dodge2(width = 0.8, preserve = "single")) +
    facet_wrap(~name, ncol = 4) +
    scale_color_manual(values = col_scale, guide = NULL) +
    labs(x = NULL, y = NULL)

ggsave(
  here("output/role.tiff"),
  compression = "lzw+p",
  width = 16,
  height = 6,
  units = "cm"
)
  
```

## Samarbete i staben

```{r}
shared_leadership_data |> 
  slice(5:8) |> 
  kable()
```

```{r}
collaboration_data <- shared_leadership_data |>
  filter(
    name %in% c(
      "Jag ser fram emot att arbeta med coacherna i min stab",
      "Jag känner tillit till coacherna i min stab",
      "Jag tycker att samarbetet i min stab fungerar bra",
      "**Syn på sammarbetet i staben**"
    )
  )

collaboration_order <- collaboration_data |> 
  summarise(
    mean = mean(Efter, na.rm = TRUE),
    max = max(Efter, na.rm = TRUE),
    .by = c(season, staff)
  ) |> 
  arrange(season, desc(mean), desc(max)) |> 
  mutate(
    staff_2 = paste(season, staff),
    staff_2 = fct_inorder(staff_2)
  )


collaboration_data |>
  drop_na(Efter) |> 
  group_by(season, staff, name) |> 
  filter(n_distinct(participant_id) >= 2) |> 
  summarise(
    y = mean(Efter),
    ymin = min(Efter),
    ymax = max(Efter),
    .groups = "drop"
  ) |> 
  left_join(collaboration_order, by = join_by(season, staff)) |> 
  ggplot(aes(x = season, y = y, group = staff_2, color = season)) +
    geom_linerange(
      aes(ymin = ymin, ymax = ymax), 
      position = position_dodge2(width = 0.8, preserve = "single"),
      linewidth = 1.8,
      alpha = .5
    ) +
    geom_point(position = position_dodge2(width = 0.8, preserve = "single")) +
    facet_wrap(~name, ncol = 4) +
    scale_color_manual(values = col_scale, guide = NULL) +
    labs(x = NULL, y = NULL)

ggsave(
  here("output/collaboration.tiff"),
  compression = "lzw+p",
  width = 16,
  height = 6,
  units = "cm"
)
  
```

## Psykologisk trygghet

```{r}
psych_safety_data <- pre_post_data_clean |> 
  pivot_longer(c(starts_with("psych_safety"), -contains("change"))) |> 
  pivot_wider(id_cols = c(season, staff, name, participant_id), names_from = time, values_from = value) |> 
  mutate(
    Förändring = `Efter` - `Före`,
    Förbättring = Förändring >= 1,
    `Ingen förändring` = Förändring > -1 & Förändring < 1,
    Försämring = Förändring <= -1,
    name = factor(
      name,
      levels = c(
        "psych_safety_1",
        "psych_safety_2",
        "psych_safety_3",
        "psych_safety_4",
        "psych_safety_5", 
        "psych_safety_6",
        "psych_safety_7",
        "psych_safety"
      ),
      labels = c(
        "Om man gör ett misstag i den här staben läggs det oftast en till last (omvänd)",
        "Coacherna i den här staben kan ta upp problem och svåra frågor",
        "Coacherna i det här teamet stöter ibland ut andra för att de är annorlunda",
        "Det känns tryggt att ta risker i den här staben",
        "Det är svårt att be andra coacher i staben om hjälp",
        "Ingen i den här staben skulle medvetet handla på ett sätt som undergräver mitt arbete",
        "I arbetet med spelare i den här staben värdesätter man mina unika förmågor och talanger och använder dem",
        "**Psykologisk trygghet**"
      )
    )
  )

psych_safety_data |> 
  group_by(name, season) |> 
  summarise(
    across(
      where(is.numeric), 
      ~paste(
        formatC(mean(.x, na.rm = TRUE), 1, format = "f"), 
        "±", 
        formatC(sd(.x, na.rm = TRUE), 1, format = "f")
      )
    ),
    across(
      where(is.logical),
      ~paste0(
        sum(.x, na.rm = TRUE),
        " (",
        round(100 * mean(.x, na.rm = TRUE)),
        "%)"
      )
    )
  ) |> 
  pivot_wider(
    id_cols = name, 
    names_from = season, 
    values_from = c(-name, -season),
    names_vary = "slowest"
  ) |> 
  kable()
```

```{r}
psych_safety_order <- psych_safety_data |> 
  summarise(
    mean = mean(Efter, na.rm = TRUE),
    max = max(Efter, na.rm = TRUE),
    .by = c(season, staff)
  ) |> 
  arrange(season, desc(mean), desc(max)) |> 
  mutate(
    staff_2 = paste(season, staff),
    staff_2 = fct_inorder(staff_2)
  )


psych_safety_data |>
  drop_na(Efter) |> 
  group_by(season, staff, name) |> 
  filter(n_distinct(participant_id) >= 2) |> 
  summarise(
    y = mean(Efter),
    ymin = min(Efter),
    ymax = max(Efter),
    .groups = "drop"
  ) |> 
  left_join(psych_safety_order, by = join_by(season, staff)) |> 
  ggplot(aes(x = season, y = y, group = staff_2, color = season)) +
    geom_linerange(
      aes(ymin = ymin, ymax = ymax), 
      position = position_dodge2(width = 0.8, preserve = "single"),
      linewidth = 1.8,
      alpha = .5
    ) +
    geom_point(position = position_dodge2(width = 0.8, preserve = "single")) +
    facet_wrap(~name, ncol = 4) +
    scale_color_manual(values = col_scale, guide = NULL) +
    labs(x = NULL, y = NULL)

ggsave(
  here("output/psych_safety.tiff"),
  compression = "lzw+p",
  width = 16,
  height = 12,
  units = "cm"
)
  
```

## Transformellt ledarskap

```{r}
transformational_leadership_data <- pre_post_data_clean |> 
  pivot_longer(c(starts_with("transformational_leadership"), -contains("change"))) |> 
  pivot_wider(id_cols = c(season, staff, name, participant_id), names_from = time, values_from = value) |> 
  mutate(
    Förändring = `Efter` - `Före`,
    Förbättring = Förändring >= 1,
    `Ingen förändring` = Förändring > -1 & Förändring < 1,
    Försämring = Förändring <= -1,
    name = factor(
      name,
      levels = c(
        "transformational_leadership_1",
        "transformational_leadership_2",
        "transformational_leadership_3",
        "transformational_leadership_4",
        "transformational_leadership_5", 
        "transformational_leadership_6",
        "transformational_leadership_7",
        "transformational_leadership"
      ),
      labels = c(
        "Jag kommunicerar en tydlig positiv vision om framtiden",
        "Jag behandlar spelare och kollegor som individer, stöttar och uppmuntrar deras utveckling",
        "Jag uppmuntrar och ger erkännande till spelare och kollegor",
        "Jag premierar tillit, engagemang och samarbete hos mina lagmedlemmar",
        "Jag uppmuntrar att tänka på problem utifrån nya perspektiv och ifrågasätter gamla antaganden",
        "Jag är tydlig med mina värderingar och jag lever som jag lär",
        "Jag ger stolthet och respekt till andra och inspirerar genom min höga kompetens",
        "**Transformellt ledarskap**"
      )
    )
  )

transformational_leadership_data |> 
  group_by(name, season) |> 
  summarise(
    across(
      where(is.numeric), 
      ~paste(
        formatC(mean(.x, na.rm = TRUE), 1, format = "f"), 
        "±", 
        formatC(sd(.x, na.rm = TRUE), 1, format = "f")
      )
    ),
    across(
      where(is.logical),
      ~paste0(
        sum(.x, na.rm = TRUE),
        " (",
        round(100 * mean(.x, na.rm = TRUE)),
        "%)"
      )
    )
  ) |> 
  pivot_wider(
    id_cols = name, 
    names_from = season, 
    values_from = c(-name, -season),
    names_vary = "slowest"
  ) |> 
  kable()
```

```{r}
transformational_leadership_order <- transformational_leadership_data |> 
  summarise(
    mean = mean(Efter, na.rm = TRUE),
    max = max(Efter, na.rm = TRUE),
    .by = c(season, staff)
  ) |> 
  arrange(season, desc(mean), desc(max)) |> 
  mutate(
    staff_2 = paste(season, staff),
    staff_2 = fct_inorder(staff_2)
  )

transformational_leadership_data |>
  drop_na(Efter) |> 
  group_by(season, staff, name) |> 
  filter(n_distinct(participant_id) >= 2) |> 
  summarise(
    y = mean(Efter),
    ymin = min(Efter),
    ymax = max(Efter),
    .groups = "drop"
  ) |> 
  left_join(transformational_leadership_order, by = join_by(season, staff)) |> 
  ggplot(aes(x = season, y = y, group = staff_2, color = season)) +
    geom_linerange(
      aes(ymin = ymin, ymax = ymax), 
      position = position_dodge2(width = 0.8, preserve = "single"),
      linewidth = 1.8,
      alpha = .5
    ) +
    geom_point(position = position_dodge2(width = 0.8, preserve = "single")) +
    facet_wrap(~name, ncol = 4) +
    scale_color_manual(values = col_scale, guide = NULL) +
    labs(x = NULL, y = NULL)

ggsave(
  here("output/transformational_leadership.tiff"),
  compression = "lzw+p",
  width = 16,
  height = 12,
  units = "cm"
)
  
```


## Människans grundläggande behov

```{r}
basic_needs_data <- pre_post_data_clean |> 
  pivot_longer(c(starts_with("basic_needs"), -contains("change"))) |> 
  pivot_wider(id_cols = c(season, staff, name, participant_id), names_from = time, values_from = value) |> 
  mutate(
    Förändring = `Efter` - `Före`,
    Förbättring = Förändring >= 1,
    `Ingen förändring` = Förändring > -1 & Förändring < 1,
    Försämring = Förändring <= -1,
    name = factor(
      name,
      levels = c(
        "basic_needs_autonomy",
        "basic_needs_competence",
        "basic_needs_relatedness"
      ),
      labels = c(
        "Upplevd autonomi",
        "Upplevd kompetens",
        "Upplevd tillhörighet"
      )
    )
  )

basic_needs_data |> 
  group_by(name, season) |> 
  summarise(
    across(
      where(is.numeric), 
      ~paste(
        formatC(mean(.x, na.rm = TRUE), 1, format = "f"), 
        "±", 
        formatC(sd(.x, na.rm = TRUE), 1, format = "f")
      )
    ),
    across(
      where(is.logical),
      ~paste0(
        sum(.x, na.rm = TRUE),
        " (",
        round(100 * mean(.x, na.rm = TRUE)),
        "%)"
      )
    )
  ) |> 
  pivot_wider(
    id_cols = name, 
    names_from = season, 
    values_from = c(-name, -season),
    names_vary = "slowest"
  ) |> 
  kable()
```

```{r}
basic_needs_order <- basic_needs_data |> 
  summarise(
    mean = mean(Efter, na.rm = TRUE),
    max = max(Efter, na.rm = TRUE),
    .by = c(season, staff)
  ) |> 
  arrange(season, desc(mean), desc(max)) |> 
  mutate(
    staff_2 = paste(season, staff),
    staff_2 = fct_inorder(staff_2)
  )

basic_needs_data |>
  drop_na(Efter) |> 
  group_by(season, staff, name) |> 
  filter(n_distinct(participant_id) >= 2) |> 
  summarise(
    y = mean(Efter),
    ymin = min(Efter),
    ymax = max(Efter),
    .groups = "drop"
  ) |> 
  left_join(basic_needs_order, by = join_by(season, staff)) |> 
  ggplot(aes(x = season, y = y, group = staff_2, color = season)) +
    geom_linerange(
      aes(ymin = ymin, ymax = ymax), 
      position = position_dodge2(width = 0.8, preserve = "single"),
      linewidth = 1.8,
      alpha = .5
    ) +
    geom_point(position = position_dodge2(width = 0.8, preserve = "single")) +
    facet_wrap(~name, ncol = 4) +
    scale_color_manual(values = col_scale, guide = NULL) +
    labs(x = NULL, y = NULL)

ggsave(
  here("output/basic_needs.tiff"),
  compression = "lzw+p",
  width = 16,
  height = 6,
  units = "cm"
)
  
```